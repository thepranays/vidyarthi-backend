spring.application.name=api-gateway
server.port=8081

##Eureka discovery client
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


##Logging level
logging.level.root=INFO
#This is the class which is responsible for defining the routes and identifiying them
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway = TRACE


## Defining Routes
#id->name of the service
spring.cloud.gateway.routes[0].id=product-service
#redirection url/route with client side loadbalancing (lb)
spring.cloud.gateway.routes[0].uri=lb://product-service
#predicates can be multiple to one route where we are using path based predicate matching ,if path starts with following then redirect to above uri
spring.cloud.gateway.routes[0].predicates[0]= Path=/api/product/**

spring.cloud.gateway.routes[1].id=user-service
spring.cloud.gateway.routes[1].uri=lb://user-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/user/**

spring.cloud.gateway.routes[2].id=chat-service-conversation
spring.cloud.gateway.routes[2].uri=lb://chat-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/chat/**

spring.cloud.gateway.routes[3].id=chat-service-chat
spring.cloud.gateway.routes[3].uri=lb:ws://chat-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/ws/vidyarthi-ws-chat/**

spring.cloud.gateway.routes[4].id = discovery-service
#do not us lb if there is only one instance of the service is running , but if the host:port has to be fetched to discovery server then use lb as at such scenarios we might have multiple instances that we do not know
spring.cloud.gateway.routes[4].uri= http://localhost:8761
spring.cloud.gateway.routes[4].predicates[0] = Path=/eureka/web
# Making changes to request uri/request headers/etc (check docs)
spring.cloud.gateway.routes[4].filters[0]=SetPath=/

spring.cloud.gateway.routes[5].id = discovery-service-static
spring.cloud.gateway.routes[5].uri= http://localhost:8761
spring.cloud.gateway.routes[5].predicates[0] = Path=/eureka/**

spring.cloud.gateway.routes[6].id = notification-service
spring.cloud.gateway.routes[6].uri= lb://notification-service
spring.cloud.gateway.routes[6].predicates[0] = Path=/api/notification/**



##Spring security
#Spring security read from this endpoint at start of application to store access token validation , etc endpoints. (reduces the configuration properties)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/vidyarthi-realm
